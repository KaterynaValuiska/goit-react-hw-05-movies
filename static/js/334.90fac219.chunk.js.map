{"version":3,"file":"static/js/334.90fac219.chunk.js","mappings":"8LAIA,EAAiDA,EAAQ,IAAjDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,YAwEjC,UAtEqB,WAAO,IAAD,EACjBC,EAAYJ,IAAZI,QACR,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,MAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA4BR,EAAAA,EAAAA,WAAS,GAArC,eAAOS,EAAP,KAAeC,EAAf,KACMC,EAAWb,IACXc,GAAmBC,EAAAA,EAAAA,QAAM,UAACF,EAASG,MAAMC,YAAhB,QAAwB,WAEvDC,EAAAA,EAAAA,YAAU,WACRN,GAAU,GAEVO,MAAM,sCAAD,OAAuClB,EAAvC,oBADW,qCAEbmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAE,GACJhB,EAASgB,EAAKjB,OACdD,EAAWkB,EAAKC,aAChBf,EAAYc,EAAKf,UACjBG,EAAUY,EAAKb,QACfG,GAAU,EACX,IACAY,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GACb,GAAE,CAACxB,IAEJ,OACE,gCACGU,IAAU,SAAC,IAAD,KACX,mBAAQiB,UAAU,YAAlB,UACE,SAAC9B,EAAD,CAAM+B,GAAIf,EAAiBgB,QAA3B,SAAoC,eAGtC,wBAAKzB,KACL,iBAAKuB,UAAU,QAAf,UACe,OAAZzB,GACC,gBACE4B,IAAI,uGACJC,IAAI,GACJC,MAAO,OAGT,gBAAKF,IAjBK,iCAiBY5B,EAAS6B,IAAI,GAAGC,MAAO,OAE/C,4BACE,wBAAI,cACJ,uBAAI1B,KACJ,wBAAI,WACHE,EAAOyB,KAAI,SAAAC,GACV,OAAO,uBAAkBA,EAAKC,MAAfD,EAAKE,GACrB,WAGL,wBAAI,4BACJ,gBAAIT,UAAU,YAAd,WACE,yBACE,SAAC9B,EAAD,CAAM+B,GAAG,OAAOb,MAAO,CAAEC,KAAMH,GAA/B,SAAmD,YAIrD,yBACE,UAAChB,EAAD,CAAM+B,GAAG,UAAUb,MAAO,CAAEC,KAAMH,GAAlC,UAAsD,UAC5C,aAId,SAACf,EAAD,MAGL,C","sources":["components/pages/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Loader } from 'components/Loader';\nimport '../styles.css';\n\nconst { useParams, Link, Outlet, useLocation } = require('react-router-dom');\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [imgFilm, setImgFilm] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [overview, setOverview] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state.from ?? '/movie');\n\n  useEffect(() => {\n    setLoader(true);\n    const API_KEY = 'd70391bd104bbaa3c93dcadd8b9cf3d4';\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(json => {\n        setTitle(json.title);\n        setImgFilm(json.poster_path);\n        setOverview(json.overview);\n        setGenres(json.genres);\n        setLoader(false);\n      })\n      .catch(err => console.error('error:' + err));\n  }, [movieId]);\n  const urlPoster = 'http://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      {loader && <Loader />}\n      <button className=\"btnGoBack\">\n        <Link to={backLinkLocation.current}>Go back</Link>\n      </button>\n\n      <h2>{title}</h2>\n      <div className=\"Movie\">\n        {imgFilm === null ? (\n          <img\n            src=\"https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png\"\n            alt=\"\"\n            width={200}\n          />\n        ) : (\n          <img src={urlPoster + imgFilm} alt=\"\" width={200} />\n        )}\n        <div>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres.map(genr => {\n            return <p key={genr.id}>{genr.name}</p>;\n          })}\n        </div>\n      </div>\n      <h3>Additional information</h3>\n      <ul className=\"MovieInfo\">\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkLocation }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkLocation }}>\n            Reviews{' '}\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n// const fetch = require('node-fetch');\n\n// const url = 'https://api.themoviedb.org/3/movie/%27id-1234%27';\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer a1b7d969f999448bbc786cfc77eb64e6',\n//   },\n// };\n\n// fetch(url, options)\n//   .then(res => res.json())\n//   .then(json => console.log(json))\n//   .catch(err => console.error('error:' + err));\n\n// const fetch = require('node-fetch');\n\n// const url = 'https://api.themoviedb.org/3/movie/%27id-1234%27/credits';\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer a1b7d969f999448bbc786cfc77eb64e6',\n//   },\n// };\n\n// fetch(url, options)\n//   .then(res => res.json())\n//   .then(json => console.log(json))\n//   .catch(err => console.error('error:' + err));\n\n// const fetch = require('node-fetch');\n\n// const url = 'https://api.themoviedb.org/3/movie/%27id-1234%27/reviews';\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer a1b7d969f999448bbc786cfc77eb64e6',\n//   },\n// };\n\n// fetch(url, options)\n//   .then(res => res.json())\n//   .then(json => console.log(json))\n//   .catch(err => console.error('error:' + err));\n"],"names":["require","useParams","Link","Outlet","useLocation","movieId","useState","imgFilm","setImgFilm","title","setTitle","overview","setOverview","genres","setGenres","loader","setLoader","location","backLinkLocation","useRef","state","from","useEffect","fetch","then","res","json","poster_path","catch","err","console","error","className","to","current","src","alt","width","map","genr","name","id"],"sourceRoot":""}