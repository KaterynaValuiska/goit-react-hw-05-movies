{"version":3,"file":"static/js/7.91f49dfc.chunk.js","mappings":"kMAgEA,UA5De,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,iBAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAVJ,EAAJ,CAGAN,GAAU,GAEVW,MAAM,mDAAD,OACgDL,EADhD,oBADW,qCAIbM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAE,GACJhB,EAASgB,EAAKC,SACdb,EAAW,sCACXF,GAAU,EACX,IACAgB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GAZX,CAaF,GAAE,CAACX,IAQJ,OACE,4BACE,wBAAI,iBACJ,kBAAMc,SATW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBnB,EAAgB,CAAEC,MAAOiB,EAAKE,SAASnB,MAAMoB,OAC9C,EAKG,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQF,MAAOpB,KACvC,mBAAQqB,KAAK,SAAb,SAAsB,cAEvB5B,IAAU,SAAC,IAAD,IAEVF,EAAMgC,OAAS,GACd,wBACGhC,EAAMiC,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAKG,IAAMC,MAAO,CAAEC,KAAM5B,GAA/C,SACGuB,EAAKM,SAFDN,EAAKG,GAMjB,OAGH,eAAGI,UAAU,eAAb,UAA6BrC,EAAQ,SAI5C,C","sources":["components/pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [messege, setMessege] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n    setLoader(true);\n    const API_KEY = 'd70391bd104bbaa3c93dcadd8b9cf3d4';\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n    )\n      .then(res => res.json())\n      .then(json => {\n        setFilms(json.results);\n        setMessege('Sorry. We did not find any movies.');\n        setLoader(false);\n      })\n      .catch(err => console.error('error:' + err));\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n  };\n\n  return (\n    <div>\n      <h2>Search film</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" value={query} />\n        <button type=\"submit\">search</button>\n      </form>\n      {loader && <Loader />}\n      {}\n      {films.length > 0 ? (\n        <ul>\n          {films.map(film => {\n            return (\n              <li key={film.id}>\n                <Link to={`/movies/${film.id}`} state={{ from: location }}>\n                  {film.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className=\"NotFoundFilm\">{messege} </p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","films","setFilms","loader","setLoader","messege","setMessege","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetch","then","res","json","results","catch","err","console","error","onSubmit","evt","preventDefault","form","currentTarget","elements","value","type","name","length","map","film","Link","to","id","state","from","title","className"],"sourceRoot":""}